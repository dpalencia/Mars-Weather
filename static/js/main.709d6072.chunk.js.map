{"version":3,"sources":["components/TitleBar/TitleMain.js","components/TitleBar/TitleBar.js","components/WeatherBoxes/WeatherTitle.js","components/WeatherBoxes/WeatherBox.js","components/WeatherBoxes/InfoValues.js","components/UnitButton.js","components/WeatherBoxes/WindDirection.js","components/WeatherBoxes/WContainer.js","components/MainContainer.js","App.js","index.js"],"names":["TitleMain","props","react_default","a","createElement","id","TitleBar","TitleBar_TitleMain","title","WeatherTitle","className","NoData","WeatherBox","style","gridArea","gridName","WeatherBoxes_WeatherTitle","status","children","InfoLine","concat","orientation","name","info","unit","InfoValues","maxName","maxVal","avName","avVal","minName","minVal","UnitButton","handler","onClick","value","currentUnit","text","WindDirection","commonDirection","compass_point","transform","compass_degrees","class","ria-hidden","WeatherBoxes","windData","windFuncs","jsonWind","weatherVals","day","HWS","mx","mn","av","Object","defineProperty","mph","map","num","toFixed","_useState","useState","_useState2","slicedToArray","windUnit","setWindUnit","_useState3","_useState4","wind","setWind","windDirection","WD","most_common","jsonPressure","PRE","pressure","tempData","jsonTemp","AT","tempFuncs","C","F","K","_useState5","_useState6","temp","setTemp","_useState7","_useState8","tempUnit","setTempUnit","tempHandler","e","persist","target","windHandler","useEffect","WeatherBoxes_WeatherBox","WeatherBoxes_InfoValues","WeatherBoxes_WindDirection","components_UnitButton","MainContainer","weatherData","setWeatherData","currentDay","setCurrentDay","dateObj","Date","First_UTC","dateString","getUTCMonth","getUTCDate","getUTCFullYear","dayHandler","fetch","then","response","json","solKeysLength","sol_keys","length","WContainer","sol","i","solDayObj","solDayString","key","App","TitleBar_TitleBar","components_MainContainer","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.709d6072.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nfunction TitleMain(props) {\r\n    return (\r\n        <div id=\"titleMain\">\r\n            <h1>Mars Weather</h1>\r\n            <p>As measured by NASA's <i>InSight</i> lander at Elysium Planitia</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TitleMain","import React from \"react\"\r\nimport TitleMain from \"./TitleMain\"\r\nimport TitleLocation from \"./TitleLocation\"\r\n\r\nfunction TitleBar() {\r\n    return (\r\n        <div id=\"titleBar\">\r\n            <TitleMain id=\"titleMain\" title=\"About\" />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TitleBar","import React from \"react\"\r\nfunction WeatherTitle(props) {\r\n    return (\r\n        <div className=\"titleBar\">\r\n            <h3>{props.title}</h3>\r\n        </div>\r\n    );\r\n}\r\nexport default WeatherTitle","import React from \"react\"\r\nimport WeatherTitle from \"./WeatherTitle\"\r\n\r\nfunction NoData() {\r\n    return (\r\n        <div className=\"noData\">\r\n            <div>\r\n                <h2>Missing data!</h2>\r\n                <p>Tell NASA to get on it.</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction WeatherBox(props) {\r\n    return (\r\n        <div className=\"weatherBox\" id={props.id} style={{gridArea: props.gridName}}>\r\n            <WeatherTitle title={props.title} />\r\n            <div className=\"weatherBoxInner\">\r\n                {props.status ? props.children : <NoData />}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default WeatherBox","import React from \"react\"\r\n\r\nfunction InfoLine(props) {\r\n    return(\r\n        <div className={`infoLine flex`}>\r\n            <div className={`infoName ${props.orientation === \"vertical\" ? \"flexHalfLeft\": \"\"}`}>{props.name}</div>\r\n            <div className={`infoVal ${props.orientation === \"vertical\" ? \"flexHalfRight\": \"\"}`}>{`${props.info} ${props.unit}`}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction InfoValues(props) {\r\n    return (\r\n        <div className={`infoValues flex ${props.orientation}`}>\r\n            <InfoLine \r\n                orientation={props.orientation} \r\n                name={props.maxName} \r\n                info={props.maxVal} \r\n                unit={props.unit} \r\n            /> \r\n            <InfoLine \r\n                orientation={props.orientation} \r\n                name={props.avName} \r\n                info={props.avVal} \r\n                unit={props.unit}\r\n            />\r\n            <InfoLine \r\n                orientation={props.orientation} \r\n                name={props.minName} \r\n                info={props.minVal} \r\n                unit={props.unit}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default InfoValues","import React from \"react\"\r\n\r\nfunction UnitButton(props) {\r\n    if(props.handler) {\r\n        return(\r\n            <button \r\n                onClick={props.handler} \r\n                value={props.value} \r\n                className={`unitbtn${props.currentUnit === props.value ? \" selected\" : \"\"}`}\r\n            >\r\n                {props.text}\r\n            </button>\r\n        )\r\n    }\r\n    else return (\"\")\r\n}\r\n\r\nexport default UnitButton","import React from \"react\"\r\n\r\nfunction WindDirection(props) {\r\n    if(props.commonDirection) {\r\n        return (\r\n            <div id=\"windDirection\" className=\"flex flexVertCenter\">\r\n                <div className=\"flexHalfLeft\">\r\n                    Direction\r\n                </div>\r\n                <div className=\"flexHalfRight flex\">\r\n                    <div className=\"altTextColor bold\">\r\n                        {props.commonDirection.compass_point}\r\n                    </div>\r\n                    <div className=\"arrowContainer bold altTextColor\">\r\n                        <i \r\n                            style={{transform: `rotate(${props.commonDirection.compass_degrees - 90}deg)`}} \r\n                            class=\"fa fa-arrow-circle-o-right\"\r\n                            ria-hidden=\"true\"></i>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    else return \"No data\"\r\n}\r\n\r\nexport default WindDirection","import React, {useState, useEffect} from \"react\"\r\nimport WeatherBox from \"./WeatherBox\"\r\nimport InfoValues from \"./InfoValues\"\r\nimport UnitButton from \"../UnitButton\"\r\nimport WindDirection from \"./WindDirection\"\r\nfunction WeatherBoxes(props) {\r\n    /* Defining these vars to make later data access easier */\r\n    let windData, windFuncs = null\r\n    let jsonWind = props.weatherVals[props.day].HWS\r\n    if(jsonWind) {\r\n        windData = [\r\n            jsonWind.mx,\r\n            jsonWind.mn,\r\n            jsonWind.av\r\n        ]\r\n        windFuncs = {\r\n            mph: () => windData.map((num) => (num * 2.237).toFixed(1)),\r\n            [\"m/s\"]: () => windData.map(num => num.toFixed(1)) // Miles/hour -> Meters/second conversion\r\n        }\r\n    }\r\n    const [windUnit, setWindUnit] = useState(jsonWind ? \"m/s\" : \"\")\r\n    const [wind, setWind] = useState(jsonWind ? windFuncs[\"m/s\"]() : [null, null, null])\r\n\r\n    let windDirection = props.weatherVals[props.day].WD.most_common \r\n    ? props.weatherVals[props.day].WD.most_common  : null\r\n\r\n    // Don't need to manage state for pressure, so we can just make it a regular variable\r\n    let jsonPressure = props.weatherVals[props.day].PRE\r\n    let pressureData = null;\r\n    let pressure = [null, null, null]\r\n    if(jsonPressure) {\r\n        pressureData = [\r\n            jsonPressure.mx,\r\n            jsonPressure.mn,\r\n            jsonPressure.av\r\n        ]\r\n        pressure = pressureData.map(num => num.toFixed(1))\r\n    }\r\n\r\n    \r\n    let jsonTemp = props.weatherVals[props.day].AT\r\n    let tempData, tempFuncs = null\r\n    if(jsonTemp) {\r\n        tempData = [\r\n            jsonTemp.mx,\r\n            jsonTemp.mn,\r\n            jsonTemp.av\r\n        ]\r\n        tempFuncs = {\r\n            C: () => tempData.map((num) => num.toFixed(1)),\r\n            F: () => tempData.map((num) => (num * 1.8 + 32).toFixed(1)), // C -> F conversion \r\n            K: () => tempData.map((num) => (num + 273.15).toFixed(1)) // C -> K conversion\r\n        }\r\n    }\r\n    const [temp, setTemp] = useState(jsonTemp ? tempFuncs.C() : [null, null, null])\r\n    const [tempUnit, setTempUnit] = useState(jsonTemp ? \"C\" : null)\r\n\r\n    function tempHandler(e) {\r\n        e.persist()\r\n        setTempUnit(e.target.value)\r\n        setTemp(tempFuncs[e.target.value])\r\n    }\r\n\r\n    function windHandler(e) {\r\n        e.persist()\r\n        setWindUnit(e.target.value)\r\n        setWind(windFuncs[e.target.value])\r\n    }\r\n\r\n    /* Update state after every render; every time date gets updated */\r\n    /* Preserve previous units, but with new numbers from new day */\r\n    useEffect(function() {\r\n        setWind(jsonWind ? windFuncs[windUnit]() : \"\")\r\n        setTemp(jsonTemp ? tempFuncs[tempUnit]() : [null, null, null])\r\n    });\r\n\r\n    return (\r\n        <div id=\"wGrid\">\r\n            <WeatherBox id=\"wind\" title=\"Wind\" gridName=\"wind\" status={jsonWind && windDirection}>\r\n                    <InfoValues\r\n                        maxName=\"Max\"\r\n                        minName=\"Min\"\r\n                        avName=\"Average\"\r\n                        maxVal={wind[0]}\r\n                        minVal={wind[1]}\r\n                        avVal={wind[2]}   \r\n                        unit={windUnit} \r\n                        orientation=\"vertical\"\r\n\r\n                    />\r\n                    <WindDirection commonDirection={windDirection} />\r\n                    <div id=\"windUnits\" className=\"btnContainer \">\r\n                        <UnitButton \r\n                            text=\"mph\" \r\n                            value=\"mph\"\r\n                            handler={windHandler}\r\n                            currentUnit={windUnit}\r\n                        />\r\n                        <UnitButton \r\n                            text=\"m/s\"\r\n                            value=\"m/s\"\r\n                            handler={windHandler}\r\n                            currentUnit={windUnit}\r\n                        /> \r\n                    </div>\r\n            </WeatherBox>\r\n            <WeatherBox title=\"Temperature\" gridName=\"temp\" status={jsonTemp}>\r\n                <InfoValues\r\n                  maxName=\"High\"\r\n                  minName=\"Low\" \r\n                  avName=\"Average\" \r\n                  maxVal={temp[0]}\r\n                  minVal={temp[1]}\r\n                  avVal={temp[2]}\r\n                  unit={`${tempUnit === \"K\" ? tempUnit : \"°\" + tempUnit}`}\r\n                  orientation=\"horizontal\"\r\n                />\r\n                <div id=\"scaleContainer\" className=\"flex\">\r\n                    \r\n                    <div id=\"scaleContainerInner\">\r\n                        <UnitButton \r\n                            text=\"°F\" \r\n                            value=\"F\" \r\n                            handler={tempHandler} \r\n                            currentUnit={tempUnit} \r\n                        />\r\n                        <UnitButton \r\n                            text=\"°C\" \r\n                            value=\"C\"\r\n                            handler={tempHandler} \r\n                            currentUnit={tempUnit} />\r\n                        <UnitButton \r\n                            text=\"K\" \r\n                            value=\"K\" \r\n                            handler={tempHandler} \r\n                            currentUnit={tempUnit} \r\n                        />\r\n                    </div>\r\n                </div>\r\n            </WeatherBox>\r\n\r\n            <WeatherBox title=\"Pressure\" gridName=\"pressure\" status={jsonPressure}>\r\n                <InfoValues\r\n                    maxName=\"Max\"\r\n                    minName=\"Min\"\r\n                    avName=\"Average\"\r\n                    maxVal={pressure[0]}\r\n                    minVal={pressure[1]}\r\n                    avVal={pressure[2]}\r\n                    unit=\"Pa\"\r\n                    orientation=\"horizontal\"\r\n                />\r\n            </WeatherBox>\r\n         </div>\r\n    )\r\n}\r\n\r\n\r\nexport default WeatherBoxes","import React, {useState, useEffect} from \"react\"\r\nimport WContainer from \"./WeatherBoxes/WContainer\"\r\nfunction MainContainer() {\r\n    const [weatherData, setWeatherData] = useState(null)\r\n    const [currentDay, setCurrentDay] = useState(null);\r\n    let dateObj = currentDay ? new Date(weatherData[currentDay].First_UTC) : \"\"\r\n    let dateString = dateObj ? `${dateObj.getUTCMonth() + 1}/${dateObj.getUTCDate()}/${dateObj.getUTCFullYear()}` : null\r\n    function dayHandler(e) {\r\n        setCurrentDay(e.target.value)\r\n    }\r\n\r\n    useEffect(function() {\r\n        fetch('https://mars.nasa.gov/rss/api/?feed=weather&category=insight&feedtype=json&ver=1.0')\r\n        .then((response) => response.json())\r\n        .then(function(json) {\r\n            setWeatherData(json)\r\n            let solKeysLength = json.sol_keys.length\r\n            setCurrentDay(json.sol_keys[solKeysLength - 1])\r\n        })\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <div id=\"mainContainer\">\r\n            <div id=\"mainTitle\">\r\n                <div>\r\n                    <h2>{dateObj ? `${dateString}\\nSol ${currentDay}`\r\n                    : \"Loading...\"}</h2>\r\n                 </div>\r\n            </div>\r\n            {weatherData && currentDay ? \r\n                <WContainer weatherVals={weatherData} day={currentDay} /> : \r\n                ``\r\n            }\r\n            <div id=\"prevDays\">\r\n                <h2>{weatherData ? \"Previous Days\" : \"Loading...\"}</h2>\r\n                {weatherData ? weatherData.sol_keys.map(function(sol, i) {\r\n                    let solDayObj = new Date(weatherData[sol].First_UTC)\r\n                    let solDayString = `${solDayObj.getUTCMonth() + 1}/${solDayObj.getUTCDate()}/${solDayObj.getUTCFullYear()}`\r\n                    return  <button\r\n                                value={sol}\r\n                                key={sol}\r\n                                onClick={dayHandler}\r\n                                className={`dateBtn\r\n                                    ${currentDay === weatherData.sol_keys[i] ? \" selected\" : \"\"}`}\r\n                            >\r\n                                {solDayString}\r\n                            </button>\r\n                }) : null}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainContainer","import React from \"react\"\r\nimport TitleBar from \"./components/TitleBar/TitleBar\"\r\nimport MainContainer from \"./components/MainContainer\"\r\nimport Footer from \"./components/Footer\"\r\nimport './App.css'\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n           <TitleBar />\r\n           <MainContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App","import React from \"react\"\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}